name: 'Qodana Quality Checks'

permissions: write-all

on:
  pull_request:
    types: [assigned, labeled, unlabeled, opened, synchronize, reopened, closed]
    paths:
      [
        '**.ts',
        '**.js',
        '**/package*.json',
        '**/workflows/on-merge-main.yaml',
        '**/workflows/active-pr-checks.yaml',
        'qodana.yaml',
        '.github/qodana.sarif.json',
      ]

# Allow a subsequently queued workflow run to interrupt a previous run
concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true

jobs:
  analyze:
    name: Analyze
    permissions:
      actions: read
      contents: read
      security-events: write
    runs-on: ubuntu-latest
    # if: ${{ !github.event.issue.draft }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Project
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Build Project
        run: npm run build

      - name: Qodana Scan
        uses: JetBrains/qodana-action@v2023.2.1
        with:
          pr-mode: true

      - name: Qodana Scan
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: ${{ runner.temp }}/qodana/results/qodana.sarif.json
